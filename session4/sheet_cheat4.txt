import saga_api

# read testfile
fobj = open("Textdatei.txt", "r")
for line in fobj:
   line=line.strip()   
   getrennte_line=line.split(" ")
   for element in getrennte_line
        print(element)
fobj.close()

# write file from list
i = 1
namensliste = ["Harald", "Manuela", "Sandra"]
fobj_out = open("ausgabe.txt", "w")
for element in namensliste:
	fobj.write("%s %s\n" % (i,element))
	i+=1
fobj_out.close()


# Distance function
def Compute_Distance(x1,y1,x2,y2):
	Dist = math.sqrt(math.pow(x2-x1,2) + math.pow(y2-y1,2))
	return Dist


# open shape file (point)
Shapefile = saga_api.SG_Get_Data_Manager().Add_Shapes("TrackUniSeegrube.shp")

# create empty shape file with 3 attributes (point)
ShapesOut = saga_api.SG_Create_Shapes(saga_api.SHAPE_TYPE_Point, "Output", saga_api.CSG_Table(), saga_api.SG_VERTEX_TYPE_XY)
ShapesOut.Add_Field(saga_api.CSG_String("Z"), saga_api.SG_DATATYPE_Double)
ShapesOut.Add_Field(saga_api.CSG_String("Distance"), saga_api.SG_DATATYPE_Double)
ShapesOut.Add_Field(saga_api.CSG_String("Name"), saga_api.SG_DATATYPE_String)

# go through shapefile
count = Shapefile.Get_Count()
for i in range(count):
    shape = Shapefile.Get_Shape(i)
    shapeout = ShapesOut.Add_Shape()

    x = shape.Get_Point(0,0).x
    y = shape.Get_Point(0,0).y
    z = shape.asFloat(2)
    name = shape.asString(3)
    print(x,y,z,name)

    shapeout.Add_Point(x,y,0)
    shapeout.Set_Value(0,z)

ShapesOut.Save('Out.shp')